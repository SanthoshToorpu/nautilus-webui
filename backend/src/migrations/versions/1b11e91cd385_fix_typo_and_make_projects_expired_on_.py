"""fix_typo_and_make_projects_expired_on_nullable

Revision ID: 1b11e91cd385
Revises: 39d6ebb560f7
Create Date: 2023-06-22 16:09:26.053534

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "1b11e91cd385"
down_revision = "39d6ebb560f7"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("files", sa.Column("projects_id", sa.Uuid(), nullable=False))
    op.drop_constraint("fk_files_project_id_projects", "files", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_files_projects_id_projects"),
        "files",
        "projects",
        ["projects_id"],
        ["id"],
    )
    op.drop_column("files", "project_id")
    op.alter_column(
        "projects", "expire_on", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "projects", "expire_on", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.add_column(
        "files", sa.Column("project_id", sa.UUID(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(
        op.f("fk_files_projects_id_projects"), "files", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_files_project_id_projects", "files", "projects", ["project_id"], ["id"]
    )
    op.drop_column("files", "projects_id")
    # ### end Alembic commands ###
