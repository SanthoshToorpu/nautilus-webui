name: nautwebui-reload
services:
  database:
    image: postgres:15.3-bullseye
    container_name: nautilus-reload-db
    restart: always
    volumes:
      - nautilus-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=nautilus
      - POSTGRES_PASSWORD=nautilus
      - POSTGRES_DB=nautilus
      - POSTGRES_PORT=5432
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U nautilus
      interval: 3s
      retries: 10
  redis:
    image: redis:7.2
    container_name: nautilus-reload-redis
    restart: always
    volumes:
      - nautilus-reload-redis:/data
    ports:
      - 6379:6379
    healthcheck:
      test: redis-cli ping
      interval: 3s
      retries: 10
  worker:
    build:
      dockerfile: ../dev/backend-tools-tests/Dockerfile
      context: ../backend
    volumes:
      - nautilus-reload-storage:/storage
      - ../backend:/app
    container_name: nautilus-reload-backend-worker
    environment:
      - POSTGRES_URI=${POSTGRES_URI}
      - REDIS_URI=${REDIS_URI}
      - S3_URL_WITH_CREDENTIALS=${S3_URL_WITH_CREDENTIALS}
      - PRIVATE_SALT=secrectkey
      - TRANSIENT_STORAGE_PATH=/storage
      - CHANNEL_NAME=${CHANNEL_NAME}
    entrypoint: ''
    command: ["rq-worker"]
    depends_on:
      - backend
  frontend:
    build:
      dockerfile: ../dev/frontend-tools/Dockerfile
      context: ../frontend
    container_name: nautilus-reload-frontend
    volumes:
      - ../frontend/public:/work/public
      - ../frontend/src:/work/src
    ports:
      - 8082:80
    environment:
      - NAUTILUS_WEB_API=http://localhost:8083/v1
      - NAUTILUS_FILE_QUOTA=${NAUTILUS_FILE_QUOTA}
      - NAUTILUS_PROJECT_QUOTA=${NAUTILUS_PROJECT_QUOTA}
      - NAUTILUS_FILE_REFRESH_EVERY_MS=${NAUTILUS_FILE_REFRESH_EVERY_MS}
    depends_on:
      - backend
  backend:
    build:
      dockerfile: ../dev/backend-tools-tests/Dockerfile
      context: ../backend
    volumes:
      - nautilus-reload-storage:/storage
      - ../backend:/app
    container_name: nautilus-reload-backend
    command: fastapi dev --host 0.0.0.0 --port 80 api/entrypoint.py
    ports:
      - 8083:80
    environment:
      - POSTGRES_URI=${POSTGRES_URI}
      - REDIS_URI=${REDIS_URI}
      - S3_URL_WITH_CREDENTIALS=${S3_URL_WITH_CREDENTIALS}
      - PRIVATE_SALT=secrectkey
      - TRANSIENT_STORAGE_PATH=/storage
      - CHANNEL_NAME=${CHANNEL_NAME}
      - ALLOWED_ORIGINS=http://localhost:8081|http://localhost:8082
      - RUN_DB_MIGRATIONS=y
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
volumes:
  nautilus-postgres:
  nautilus-reload-redis:
  nautilus-reload-storage:
